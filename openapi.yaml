openapi: 3.0.0
info:
  title: CSC309 PP1
  description: >-
    This collection provides RESTful JSON endpoints for managing accounts,
    hotels, flights, bookings, and notifications. All protected endpoints
    require a valid JWT (set in the Authorization header as Bearer {{token}}).
    The APIs support user registration/login, hotel and room management, flight
    search through the AFS system, booking operations (create, checkout,
    cancel), and notifications. Additionally, there are additional endpoints for
    the locally hosted lists of cities and airports for frontend use (to come
    later in PP2).


    Below you will find all the user stories we implemented for PP1.


    ### **Accounts**


    - **U1: As a user, I want to sign up, log in, log out, and edit my profile.
    Profile information includes first and last name, email, profile picture,
    and phone number. Authentication should be handled with a proper JWT
    setup.**
        

    ---


    ### **Flights Search**


    - **U2: As a visitor, I want to search for flights by specifying a source,
    destination, and date(s). Source and destination could be either a city or
    an airport. I want to search for one-way or round-trip flights.**
        
    - **U3: As a visitor, I want to view flight details, including
    departure/arrival times, duration, and layovers.**
        

    _(The stories about auto-complete and date picker dropdowns are UI concerns
    and will be implemented in Part 2.)_


    ---


    ### **Hotel Management**


    - **U6: As a user, I want to add my hotel to the platform. A hotel has name,
    logo, address, location, star-rating, and several images.**
        
    - **U7: As a hotel owner, I want to define room types, with each type having
    a name (e.g., twin, double, etc.), amenities, prices per night, and several
    images.**
        
    - **U8: As a hotel owner, I want to view and filter my hotel’s booking list
    by date and/or room type.**
        
    - **U9: As a hotel owner, I want to cancel a hotel reservation, so that I
    have flexibility in managing my hotel.**
        
    - **U10: As a hotel owner, I want to view room availability (per room type)
    for specific date ranges to better understand occupancy trends.**
        
    - **U11: As a hotel owner, I want to update the number of available rooms of
    each type in my hotel. If availability decreases, it may require canceling
    some existing reservations.**
        

    ---


    ### **Hotel Search**


    - **U12: As a visitor, I want to search for hotels by check-in date,
    check-out date, and city. I also want to filter them by name, star-rating,
    and price range. Search results should display in a list that shows the
    hotel information, starting price, and a location pinpoint on a map. The
    results should only reflect available rooms.**
        
    - **U13: As a visitor, I want to view detailed hotel information, including
    room types, amenities, and pricing.**
        
    - **U14: As a visitor, I want to view the availability and details of
    different room types for my selected dates in a selected hotel.**
        

    ---


    ### **Booking**


    - **U15: As a user, I want to book an itinerary that includes a flight
    (one-way or round-trip) and/or a hotel reservation.**
        
    - **U16: As a user, I want to a checkout page that displays all details
    about my itinerary (flight and/or hotel), collects my credit card
    information, validates the card details, and finalizes the booking if
    everything is correct. Note that Validation means statically checking the
    validity of the card number and expiry date. The card should not (and
    cannot) be charged for real.**
        
    - **U17: As a user, I want to see hotel suggestions for the city if I am
    flying to. I also want to see flight suggestions if I am about to book a
    hotel stay. Both suggestions must have a link to take me to the main
    hotel/flight search page with pre-filled inputs, while preserving my
    current, in progress order.**
        
    - **U18: As a user, I want to receive an minimal, PDF invoice for my trip
    booking, so that I have a record of the booking and transaction.**
        
    - **U19: As a user, I want to view my bookings, so that I can easily access
    my itinerary and booking information.**
        
    - **U20: As a user, I want to cancel all or specific parts of a booking,
    giving me flexibility in managing my trips.**
        
    - **U21: As a user, I want to verify my flight booking to ensure the flight
    schedule remains as planned.**
        

    ---


    ### **Notifications**


    - **U22: As a user, I want to receive notifications when I book a new
    itinerary, and when there are external changes to my booking (e.g.,
    cancellation by me or hotel owner).**
        
    - **U23: As a hotel owner, I want to receive notifications when a new
    booking is made for my hotel.**
        

    In each subfolder of this Postman project, the requests are organized in the
    same order of user stories within each section. For example, in the Hotel
    Management section, the first request (POST hotels) corresponds to U6.
  version: 1.0.0
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Accounts
  - name: Flights Search
  - name: Hotel Management
  - name: Hotel Search
  - name: Booking
  - name: Notifications
  - name: Extra
paths:
  /api/users/register:
    post:
      tags:
        - Accounts
      summary: Register
      description: Registers a new user with profile details.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: John
                lastName: Doe
                email: john@example.com
                password: password123
                phoneNumber: '1234567890'
                profilePicture: http://example.com/profile.jpg
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  phoneNumber:
                    type: string
                  profilePicture:
                    type: string
                  role:
                    type: string
              example:
                user:
                  id: 1
                  firstName: "John"
                  lastName: "Doe"
                  email: "joe@example.com"
                  phoneNumber: "1234567890"
                  profilePicture: "http://example.com/profile.jpg"
                  role: "USER"
  /api/users/login:
    post:
      tags:
        - Accounts
      summary: "Login"
      description: "Logs in a user and returns JWT tokens."
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              email: "john@example.com"
              password: "password123"
      responses:
        '200':
          description: "Login successful, JWT tokens returned."
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
              example:
                accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImVtYWlsIjoiam9obkBleGFtcGxlLmNvbSIsInJvbGUiOiJVU0VSIiwiaWF0IjoxNzQxMjQ4NDk3LCJleHAiOjE3NDEyNDkzOTd9.xiAp12QktbBvIV1C7h2xB_bjidvU78v6crnq2RnWOSA"
                refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImVtYWlsIjoiam9obkBleGFtcGxlLmNvbSIsInJvbGUiOiJVU0VSIiwiaWF0IjoxNzQxMjQ4NDk3LCJleHAiOjE3NDE4NTMyOTd9.DKnNFTDG5kI12ZUDL_w79r2mZaTfsVdYBuLBfG6ygfs"
  /api/users/profile:
    put:
      tags:
        - Accounts
      summary: Update Profile
      description: Updates the user’s profile (name, phone, picture).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: Jane
                lastName: Doe
                phoneNumber: '0987654321'
                profilePicture: http://example.com/newpic.jpg
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Profile updated successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  updatedUser:
                    type: object
                    properties:
                      id:
                        type: integer
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      password:
                        type: string
                      profilePicture:
                        type: string
                      phoneNumber:
                        type: string
                      role:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
              example:
                message: "Profile updated successfully"
                updatedUser:
                  id: 1
                  firstName: "Jane"
                  lastName: "Doe"
                  email: "john@example.com"
                  password: "$2b$10$wURfRjj9OvL.mzb3CF2lHu2o00YlfI.7gyVWeWV7adW.JhRFVLOka"
                  profilePicture: "http://example.com/newpic.jpg"
                  phoneNumber: "0987654321"
                  role: "USER"
                  createdAt: "2025-03-08T22:17:59.853Z"
                  updatedAt: "2025-03-08T22:18:05.649Z"

                  
  /api/users/refresh:
    post:
      tags:
        - Accounts
      summary: Refresh Token
      description: Accepts a valid refresh token and returns a new access token to extend the user's session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              example:
                refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImVtYWlsIjoiam9obkBleGFtcGxlLmNvbSIsInJvbGUiOiJVU0VSIiwiaWF0IjoxNzQxMzIyMjQ5LCJleHAiOjE3NDEzMjMxNDl9.NeWSjN24Cj5pg1i5oLrwxjIuZ5Eqhatbq9drFEREAVc"
      responses:
        '200':
          description: New access token generated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
              example:
                accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInJvbGUiOiJVU0VSIiwiaWF0IjoxNzQxMzIyMzI2LCJleHAiOjE3NDEzMjMyMjZ9.BH92bhrns6deS90IGHVX1Hj7_76j8QFvnbDsIGCPddo"
  
  
  /api/flights:
    get:
      tags:
        - Flights Search
      summary: Search Flights
      description: Searches for flights based on origin, destination, and dates.
      parameters:
        - name: origin
          in: query
          schema:
            type: string
          example: Toronto
        - name: destination
          in: query
          schema:
            type: string
          example: Zurich
        - name: date
          in: query
          schema:
            type: string
          example: '2024-11-17'
        - name: returnDate
          in: query
          schema:
            type: string
          example: '2024-11-29'
      responses:
        '200':
          description: "Flights retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  flightThere:
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            legs:
                              type: integer
                            flights:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  airline:
                                    type: object
                                    properties:
                                      code:
                                        type: string
                                      name:
                                        type: string
                                  departureTime:
                                    type: string
                                    format: date-time
                                  arrivalTime:
                                    type: string
                                    format: date-time
                                  duration:
                                    type: integer
                                  price:
                                    type: integer
                            layover:
                              type: integer
                              nullable: true
                  flightBack:
                    type: object
                    properties:
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            legs:
                              type: integer
                            flights:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  airline:
                                    type: object
                                    properties:
                                      code:
                                        type: string
                                      name:
                                        type: string
                                  departureTime:
                                    type: string
                                    format: date-time
                                  arrivalTime:
                                    type: string
                                    format: date-time
                                  duration:
                                    type: integer
                                  price:
                                    type: integer
                            layover:
                              type: integer
                              nullable: true
              example:
                flightThere:
                  results:
                    - legs: 1
                      flights:
                        - id: "bd7ee4df-004d-4c95-abda-633d276a5842"
                          airline:
                            code: "AC"
                            name: "Air Canada"
                          departureTime: "2024-11-17T14:50:00.000Z"
                          arrivalTime: "2024-11-18T02:00:00.000Z"
                          duration: 670
                          price: 1744
                    - legs: 2
                      flights:
                        - id: "ee372818-cd33-4886-9088-d601947777a2"
                          airline:
                            code: "AC"
                            name: "Air Canada"
                          departureTime: "2024-11-17T20:30:00.000Z"
                          arrivalTime: "2024-11-18T06:20:00.000Z"
                          duration: 590
                          price: 1765
                        - id: "9383ba28-71a6-4493-8849-a5d0c5ae7802"
                          airline:
                            code: "MU"
                            name: "China Eastern Airlines"
                          departureTime: "2024-11-18T12:40:00.000Z"
                          arrivalTime: "2024-11-19T02:30:00.000Z"
                          duration: 830
                          price: 1123
                      layover: 380
                flightBack:
                  results:
                    - legs: 1
                      flights:
                        - id: "4e987ef6-879d-481b-b474-00059d70408c"
                          airline:
                            code: "LX"
                            name: "Swiss International Air Lines"
                          departureTime: "2024-11-29T18:35:00.000Z"
                          arrivalTime: "2024-11-30T00:50:00.000Z"
                          duration: 375
                          price: 1136
                    - legs: 2
                      flights:
                        - id: "88818fe2-141e-4243-887b-aa8b12c29e39"
                          airline:
                            code: "LX"
                            name: "Swiss International Air Lines"
                          departureTime: "2024-11-29T19:20:00.000Z"
                          arrivalTime: "2024-11-30T01:35:00.000Z"
                          duration: 375
                          price: 954
                        - id: "c36e6f42-e631-4ee8-a51a-afc309e223a4"
                          airline:
                            code: "VN"
                            name: "Vietnam Airlines"
                          departureTime: "2024-11-30T18:10:00.000Z"
                          arrivalTime: "2024-12-01T04:00:00.000Z"
                          duration: 590
                          price: 540
                      layover: 995

  /api/flights/{id}:
    get:
      tags:
        - Flights Search
      summary: Flight Details
      description: Retrieves detailed info for a specific flight.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: bd7ee4df-004d-4c95-abda-633d276a5842
        - name: origin
          in: query
          schema:
            type: string
          example: Toronto
        - name: destination
          in: query
          schema:
            type: string
          example: Zurich
        - name: date
          in: query
          schema:
            type: string
          example: '2024-11-17'
      responses:
        '200':
          description: "Flight details retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  flightNumber:
                    type: string
                  departureTime:
                    type: string
                    format: date-time
                  arrivalTime:
                    type: string
                    format: date-time
                  originId:
                    type: string
                  destinationId:
                    type: string
                  duration:
                    type: integer
                  price:
                    type: number
                  currency:
                    type: string
                  availableSeats:
                    type: integer
                  status:
                    type: string
                  airline:
                    type: object
                    properties:
                      code:
                        type: string
                      name:
                        type: string
                  origin:
                    type: object
                    properties:
                      code:
                        type: string
                      name:
                        type: string
                      city:
                        type: string
                      country:
                        type: string
                  destination:
                    type: object
                    properties:
                      code:
                        type: string
                      name:
                        type: string
                      city:
                        type: string
                      country:
                        type: string
              example:
                id: "bd7ee4df-004d-4c95-abda-633d276a5842"
                flightNumber: "AC8762"
                departureTime: "2024-11-17T14:50:00.000Z"
                arrivalTime: "2024-11-18T02:00:00.000Z"
                originId: "370d2633-ba94-47f5-a735-513c0e332224"
                destinationId: "2bcb7925-96aa-4de8-9ec1-3622e954c0b6"
                duration: 670
                price: 1744
                currency: "CAD"
                availableSeats: 0
                status: "SCHEDULED"
                airline:
                  code: "AC"
                  name: "Air Canada"
                origin:
                  code: "YYZ"
                  name: "Toronto Pearson International Airport"
                  city: "Toronto"
                  country: "Canada"
                destination:
                  code: "ZRH"
                  name: "Zurich Airport"
                  city: "Zurich"
                  country: "Switzerland"
  /api/hotels:
    post:
      tags:
        - Hotel Management
      summary: Add Hotel
      description: Adds a new hotel with the provided details.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Example Hotel
                logo: http://example.com/logo.png
                address: 123 Example Road
                location: Example City, Country
                starRating: 5
                images:
                  - http://example.com/img1.png
                  - http://example.com/img2.png
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Hotel added successfully."
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                ownerId: 1
                name: "Example Hotel"
                logo: "http://example.com/logo.png"
                address: "123 Example Road"
                location: "Example City, Country"
                starRating: 5
                images:
                  - "http://example.com/img1.png"
                  - "http://example.com/img2.png"
                createdAt: "2025-03-06T08:11:37.623Z"
                updatedAt: "2025-03-06T08:11:37.623Z"
    get:
      tags:
        - Hotel Search
      summary: Search Hotels
      description: >-
        Searches for hotels by check-in/check-out dates, city, name, and price
        range.
      parameters:
        - name: checkIn
          in: query
          schema:
            type: string
          example: '2025-03-06'
        - name: checkOut
          in: query
          schema:
            type: string
          example: '2025-03-08'
        - name: city
          in: query
          schema:
            type: string
          example: Example City, Country
        - name: name
          in: query
          schema:
            type: string
          example: Example Hotel
        - name: minPrice
          in: query
          schema:
            type: integer
          example: '50'
        - name: maxPrice
          in: query
          schema:
            type: integer
          example: '150'
      responses:
        '200':
          description: "Hotels search results retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        logo:
                          type: string
                        address:
                          type: string
                        location:
                          type: string
                        starRating:
                          type: integer
                        startingPrice:
                          type: number
                        coordinates:
                          type: object
                          properties:
                            lat:
                              type: number
                              nullable: true
                            lng:
                              type: number
                              nullable: true
              example:
                results:
                  - id: 3
                    name: "Example Hotel"
                    logo: "http://example.com/logo.png"
                    address: "123 Example Road"
                    location: "Example City, Country"
                    starRating: 5
                    startingPrice: 120
                    coordinates:
                      lat: null
                      lng: null

  /api/hotels/{id}:
    put:
      tags:
        - Hotel Management
      summary: Update Hotel
      description: Updates an existing hotel’s information.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Example Hotel Updated
                logo: http://example.com/new-logo.png
                address: 123 New Example Road
                location: New Example City, Country
                starRating: 4
                images:
                  - http://example.com/new-img1.png
                  - http://example.com/new-img2.png
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Hotel updated successfully."
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                ownerId: 1
                name: "Example Hotel Updated"
                logo: "http://example.com/new-logo.png"
                address: "123 New Example Road"
                location: "New Example City, Country"
                starRating: 4
                images:
                  - "http://example.com/new-img1.png"
                  - "http://example.com/new-img2.png"
                createdAt: "2025-03-06T08:11:37.623Z"
                updatedAt: "2025-03-06T08:11:59.096Z"
    get:
      tags:
        - Hotel Search
      summary: Hotel Info
      description: Retrieves detailed information for a specific hotel.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      responses:
        '200':
          description: "Hotel details retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  logo:
                    type: string
                  address:
                    type: string
                  location:
                    type: string
                  starRating:
                    type: integer
                  images:
                    type: array
                    items:
                      type: string
                  coordinates:
                    type: object
                    properties:
                      lat:
                        type: number
                        nullable: true
                      lng:
                        type: number
                        nullable: true
                  rooms:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                        amenities:
                          type: array
                          items:
                            type: string
                        pricePerNight:
                          type: number
                        images:
                          type: array
                          items:
                            type: string
                        availableRooms:
                          type: integer
              example:
                id: 1
                name: "Example Hotel Updated"
                logo: "http://example.com/new-logo.png"
                address: "123 New Example Road"
                location: "New Example City, Country"
                starRating: 4
                images:
                  - "http://example.com/new-img1.png"
                  - "http://example.com/new-img2.png"
                coordinates:
                  lat: null
                  lng: null
                rooms:
                  - id: 1
                    type: "Twin Room"
                    amenities:
                      - "Two single beds"
                      - "WiFi"
                      - "TV"
                    pricePerNight: 120
                    images:
                      - "https://example.com/twin1.jpg"
                      - "https://example.com/twin2.jpg"
                    availableRooms: 20
    delete:
      tags:
        - Hotel Management
      summary: Delete Hotel
      description: Deletes a hotel by its ID.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Hotel deleted successfully."
          content:
            application/json:
              schema:
                type: object
              example:
                message: "Hotel deleted successfully"

  /api/roomTypes:
    post:
      tags:
        - Hotel Management
      summary: Create Room
      description: >-
        Creates a room type for a hotel (name, amenities, price, images, total
        rooms).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                hotelId: 1
                name: Twin Room
                amenities:
                  - Two single beds
                  - WiFi
                  - TV
                pricePerNight: 120
                images:
                  - https://example.com/twin1.jpg
                  - https://example.com/twin2.jpg
                availableRooms: 10
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Room type created successfully."
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                hotelId: 1
                name: "Twin Room"
                amenities:
                  - "Two single beds"
                  - "WiFi"
                  - "TV"
                pricePerNight: 120
                images:
                  - "https://example.com/twin1.jpg"
                  - "https://example.com/twin2.jpg"
                availableRooms: 10
                createdAt: "2025-03-06T08:13:01.323Z"
                updatedAt: "2025-03-06T08:13:01.323Z"
                
  /api/roomTypes/{id}:
    get:
      tags:
        - Hotel Management
      summary: Room Info
      description: Gets details of a specific room type.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Room type details retrieved successfully."
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                hotelId: 1
                name: "Twin Room"
                amenities:
                  - "Two single beds"
                  - "WiFi"
                  - "TV"
                pricePerNight: 120
                images:
                  - "https://example.com/twin1.jpg"
                  - "https://example.com/twin2.jpg"
                availableRooms: 10
                createdAt: "2025-03-06T08:13:01.323Z"
                updatedAt: "2025-03-06T08:13:01.323Z"
                hotel:
                  id: 1
                  ownerId: 1
                  name: "Example Hotel Updated"
                  logo: "http://example.com/new-logo.png"
                  address: "123 New Example Road"
                  location: "New Example City, Country"
                  starRating: 4
                  images:
                    - "http://example.com/new-img1.png"
                    - "http://example.com/new-img2.png"
                  createdAt: "2025-03-06T08:11:37.623Z"
                  updatedAt: "2025-03-06T08:11:59.096Z"
    put:
      tags:
        - Hotel Management
      summary: Update Room
      description: >-
        Updates details of a specific room type (name, amenities, price, images,
        total rooms).
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Twin Room Deluxe
                amenities:
                  - Two double beds
                  - WiFi
                  - TV
                  - Air Conditioning
                pricePerNight: 130
                images:
                  - https://example.com/twin-deluxe1.jpg
                  - https://example.com/twin-deluxe2.jpg
                availableRooms: 8
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Room type updated successfully."
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                hotelId: 1
                name: "Twin Room Deluxe"
                amenities:
                  - "Two double beds"
                  - "WiFi"
                  - "TV"
                  - "Air Conditioning"
                pricePerNight: 130
                images:
                  - "https://example.com/twin-deluxe1.jpg"
                  - "https://example.com/twin-deluxe2.jpg"
                availableRooms: 8
                createdAt: "2025-03-06T08:13:01.323Z"
                updatedAt: "2025-03-06T08:13:52.613Z"
    delete:
      tags:
        - Hotel Management
      summary: Delete Room
      description: Deletes a room type by its ID.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Room type deleted successfully."
          content:
            application/json:
              schema:
                type: object
              example:
                message: "Room deleted successfully"
  /api/bookings/owner:
    get:
      tags:
        - Hotel Management
      summary: Owner Bookings
      description: Retrieves owner bookings filtered by date range and room type.
      security:
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
          example: '2025-03-06'
        - name: endDate
          in: query
          schema:
            type: string
          example: '2025-03-08'
        - name: room
          in: query
          schema:
            type: string
          example: Twin Room
      responses:
        '200':
          description: "Owner bookings retrieved successfully."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    userId:
                      type: integer
                    hotelId:
                      type: integer
                    roomId:
                      type: integer
                    checkIn:
                      type: string
                      format: date-time
                    checkOut:
                      type: string
                      format: date-time
                    status:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    room:
                      type: object
                      properties:
                        id:
                          type: integer
                        hotelId:
                          type: integer
                        name:
                          type: string
                        amenities:
                          type: array
                          items:
                            type: string
                        pricePerNight:
                          type: number
                        images:
                          type: array
                          items:
                            type: string
                        availableRooms:
                          type: integer
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                    hotel:
                      type: object
                      properties:
                        id:
                          type: integer
                        ownerId:
                          type: integer
                        name:
                          type: string
                        logo:
                          type: string
                        address:
                          type: string
                        location:
                          type: string
                        starRating:
                          type: integer
                        images:
                          type: array
                          items:
                            type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
              example:
                - id: 1
                  userId: 1
                  hotelId: 1
                  roomId: 2
                  checkIn: "2025-03-06T00:00:00.000Z"
                  checkOut: "2025-03-08T00:00:00.000Z"
                  status: "PENDING"
                  createdAt: "2025-03-06T08:15:50.136Z"
                  updatedAt: "2025-03-06T08:15:50.136Z"
                  room:
                    id: 2
                    hotelId: 1
                    name: "Twin Room"
                    amenities:
                      - "Two single beds"
                      - "WiFi"
                      - "TV"
                    pricePerNight: 120
                    images:
                      - "https://example.com/twin1.jpg"
                      - "https://example.com/twin2.jpg"
                    availableRooms: 10
                    createdAt: "2025-03-06T08:14:30.460Z"
                    updatedAt: "2025-03-06T08:14:30.460Z"
                  hotel:
                    id: 1
                    ownerId: 1
                    name: "Example Hotel Updated"
                    logo: "http://example.com/new-logo.png"
                    address: "123 New Example Road"
                    location: "New Example City, Country"
                    starRating: 4
                    images:
                      - "http://example.com/new-img1.png"
                      - "http://example.com/new-img2.png"
                    createdAt: "2025-03-06T08:11:37.623Z"
                    updatedAt: "2025-03-06T08:11:59.096Z"
  /api/bookings/{id}/cancel:
    post:
      tags:
        - Hotel Management
      summary: Cancel Booking
      description: Cancels a specific booking by its ID.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Booking cancelled successfully."
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                userId: 1
                hotelId: 1
                roomId: 2
                checkIn: "2025-03-06T00:00:00.000Z"
                checkOut: "2025-03-08T00:00:00.000Z"
                status: "CANCELED"
                createdAt: "2025-03-06T08:15:50.136Z"
                updatedAt: "2025-03-06T08:16:53.626Z"

  /api/hotels/availability:
    get:
      tags:
        - Hotel Management
      summary: Get Availability
      description: Returns room availability for a hotel based on a date range and room ID.
      security:
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
          example: '2025-03-06'
        - name: endDate
          in: query
          schema:
            type: string
          example: '2025-03-08'
        - name: roomId
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: "Room availability retrieved."
          content:
            application/json:
              schema:
                type: object
              example:
                room:
                  id: 1
                  name: "Twin Room"
                  totalRooms: 10
                dateRange:
                  startDate: "2025-03-06"
                  endDate: "2025-03-08"
                bookingsCount: 0
                availableRooms: 10
  /api/hotels/availability/{id}:
    post:
      tags:
        - Hotel Management
      summary: Update Availability
      description: Updates available room count for a specific room type.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                availableRooms: 20
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Availability updated successfully."
          content:
            application/json:
              schema:
                type: object
              example:
                room:
                  id: 1
                  hotelId: 1
                  name: "Twin Room"
                  amenities:
                    - "Two single beds"
                    - "WiFi"
                    - "TV"
                  pricePerNight: 120
                  images:
                    - "https://example.com/twin1.jpg"
                    - "https://example.com/twin2.jpg"
                  availableRooms: 20
                  createdAt: "2025-03-06T08:14:30.460Z"
                  updatedAt: "2025-03-06T08:18:28.537Z"
                canceledBookings: []
  /api/hotels/{id}/rooms:
    get:
      tags:
        - Hotel Search
      summary: Search Rooms
      description: >-
        Gets available room details for a hotel for given check-in/check-out
        dates.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
        - name: checkIn
          in: query
          schema:
            type: string
          example: '2025-03-06'
        - name: checkOut
          in: query
          schema:
            type: string
          example: '2025-03-08'
      responses:
        '200':
          description: "Room types retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        amenities:
                          type: array
                          items:
                            type: string
                        pricePerNight:
                          type: number
                        images:
                          type: array
                          items:
                            type: string
                        totalAvailableRooms:
                          type: integer
                        remainingRooms:
                          type: integer
              example:
                results:
                  - id: 1
                    name: "Twin Room"
                    amenities:
                      - "Two single beds"
                      - "WiFi"
                      - "TV"
                    pricePerNight: 120
                    images:
                      - "https://example.com/twin1.jpg"
                      - "https://example.com/twin2.jpg"
                    totalAvailableRooms: 20
                    remainingRooms: 18

  /api/bookings/user:
    post:
      tags:
        - Booking
      summary: Create Booking
      description: "Creates a new booking with hotel, room, and flight details."
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            example:
              hotelId: 1
              roomId: 1
              checkIn: "2025-03-06"
              checkOut: "2025-03-08"
              flightIds:
                - "9383ba28-71a6-4493-8849-a5d0c5ae7802"
              firstName: John
              lastName: Doe
              email: john@example.com
              passportNumber: A12345678
      responses:
        '200':
          description: "Booking created successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  hotelBooking:
                    type: object
                    properties:
                      id:
                        type: integer
                      userId:
                        type: integer
                      hotelId:
                        type: integer
                      roomId:
                        type: integer
                      checkIn:
                        type: string
                        format: date-time
                      checkOut:
                        type: string
                        format: date-time
                      status:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                  flightBooking:
                    type: object
                    properties:
                      id:
                        type: integer
                      userId:
                        type: integer
                      flightBookingReference:
                        type: string
                      flightIds:
                        type: array
                        items:
                          type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      passportNumber:
                        type: string
                      status:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
              example:
                hotelBooking:
                  id: 8
                  userId: 1
                  hotelId: 1
                  roomId: 1
                  checkIn: "2025-04-15T00:00:00.000Z"
                  checkOut: "2025-04-18T00:00:00.000Z"
                  status: "PENDING"
                  createdAt: "2025-03-08T09:31:01.575Z"
                  updatedAt: "2025-03-08T09:31:01.575Z"
                flightBooking:
                  id: 4
                  userId: 1
                  flightBookingReference: "997D1A"
                  flightIds:
                    - "9383ba28-71a6-4493-8849-a5d0c5ae7802"
                  firstName: "John"
                  lastName: "Doe"
                  email: "john@example.com"
                  passportNumber: "A12345678"
                  status: "PENDING"
                  createdAt: "2025-03-08T09:31:02.464Z"
                  updatedAt: "2025-03-08T09:31:02.464Z"

    get:
      tags:
        - Booking
      summary: User Bookings
      description: "Retrieves all bookings for the authenticated user."
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "User bookings retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  hotelBookings:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        userId:
                          type: integer
                        hotelId:
                          type: integer
                        roomId:
                          type: integer
                        checkIn:
                          type: string
                          format: date-time
                        checkOut:
                          type: string
                          format: date-time
                        status:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        hotel:
                          type: object
                          properties:
                            name:
                              type: string
                            location:
                              type: string
                        room:
                          type: object
                          properties:
                            name:
                              type: string
                            pricePerNight:
                              type: number
                  flightBookings:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        userId:
                          type: integer
                        flightBookingReference:
                          type: string
                        flightIds:
                          type: array
                          items:
                            type: string
                        firstName:
                          type: string
                        lastName:
                          type: string
                        email:
                          type: string
                        passportNumber:
                          type: string
                        status:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
              example:
                hotelBookings:
                  - id: 8
                    userId: 1
                    hotelId: 1
                    roomId: 1
                    checkIn: "2025-04-15T00:00:00.000Z"
                    checkOut: "2025-04-18T00:00:00.000Z"
                    status: "PENDING"
                    createdAt: "2025-03-08T09:31:01.575Z"
                    updatedAt: "2025-03-08T09:31:01.575Z"
                    hotel:
                      name: "Swiss Luxury"
                      location: "Zurich"
                    room:
                      name: "Deluxe Room"
                      pricePerNight: 150
                  - id: 7
                    userId: 1
                    hotelId: 1
                    roomId: 1
                    checkIn: "2025-04-15T00:00:00.000Z"
                    checkOut: "2025-04-18T00:00:00.000Z"
                    status: "PENDING"
                    createdAt: "2025-03-08T09:30:19.594Z"
                    updatedAt: "2025-03-08T09:30:19.594Z"
                    hotel:
                      name: "Swiss Luxury"
                      location: "Zurich"
                    room:
                      name: "Deluxe Room"
                      pricePerNight: 150
                flightBookings:
                  - id: 1
                    userId: 1
                    flightBookingReference: "740FC2"
                    flightIds:
                      - "9383ba28-71a6-4493-8849-a5d0c5ae7802"
                    firstName: "John"
                    lastName: "Doe"
                    email: "john@example.com"
                    passportNumber: "A12345678"
                    status: "CANCELED"
                    createdAt: "2025-03-08T08:58:37.210Z"
                    updatedAt: "2025-03-08T09:34:24.965Z"
                  - id: 4
                    userId: 1
                    flightBookingReference: "997D1A"
                    flightIds:
                      - "9383ba28-71a6-4493-8849-a5d0c5ae7802"
                    firstName: "John"
                    lastName: "Doe"
                    email: "john@example.com"
                    passportNumber: "A12345678"
                    status: "PENDING"
                    createdAt: "2025-03-08T09:31:02.464Z"
                    updatedAt: "2025-03-08T09:31:02.464Z"

    patch:
      tags:
        - Booking
      summary: Cancel Bookings
      description: >
        Cancels bookings for the authenticated user.
        - To cancel all active bookings, include `"cancelAll": true`.
        - To cancel multiple hotel bookings, include `"hotelBookingIds": [number, ...]`.
        - To cancel multiple flight bookings, include `"flightBookingIds": [number, ...]`.
        - To cancel a single booking, include both `"bookingId": number` and `"bookingType": "hotel" | "flight"`.

      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            example:
              hotelBookingIds:
                - 1
                - 2
              flightBookingIds:
                - 1
                - 2
                
      responses:
        '200':
          description: "Bookings cancellation processed."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  count:
                    type: integer
              example:
                message: "Bookings cancelled"
                count: 4


  /api/checkout:
    post:
      tags:
        - Booking
      summary: Checkout
      description: >
        Processes checkout for a booking using credit card details.  
        `bookingType` specifies which type of booking to checkout:  
        - Use `"hotel"` for hotel bookings.  
        - Use `"flight"` for flight bookings.

      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                bookingId: 1
                bookingType: hotel
                cardNumber: '4539578763621486'
                expiryMonth: 12
                expiryYear: 2026
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Booking confirmed successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  booking:
                    type: object
                    properties:
                      id:
                        type: integer
                      userId:
                        type: integer
                      hotelId:
                        type: integer
                      roomId:
                        type: integer
                      checkIn:
                        type: string
                        format: date-time
                      checkOut:
                        type: string
                        format: date-time
                      status:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
              example:
                message: "Booking confirmed"
                booking:
                  id: 1
                  userId: 1
                  hotelId: 1
                  roomId: 1
                  checkIn: "2025-03-06T00:00:00.000Z"
                  checkOut: "2025-03-08T00:00:00.000Z"
                  status: "CONFIRMED"
                  createdAt: "2025-03-06T08:15:50.136Z"
                  updatedAt: "2025-03-06T08:52:24.977Z"

  /api/suggestions:
    post:
      tags:
        - Booking
      summary: Get Suggestions
      description: >-
        Returns booking suggestions for flights and hotels based on input
        criteria.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                hotelId: 18
                destination: Zurich
                departureCity: Toronto
                suggestedDate: '2025-04-15'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Suggestions retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  hotels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        starRating:
                          type: integer
                        address:
                          type: string
                        images:
                          type: array
                          items:
                            type: string
                  searchUrl:
                    type: string
                  flights:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        airline:
                          type: object
                          properties:
                            code:
                              type: string
                            name:
                              type: string
                        departureTime:
                          type: string
                          format: date-time
                        price:
                          type: integer
              example:
                hotels:
                  - id: 16
                    name: "Swiss Inn"
                    starRating: 5
                    address: "123 Alpine Rd"
                    images:
                      - "http://example.com/img1.png"
                      - "http://example.com/img2.png"
                  - id: 18
                    name: "Swiss Luxury"
                    starRating: 5
                    address: "456 Bahnhofstrasse"
                    images:
                      - "http://example.com/img1.png"
                searchUrl: "/search/flights?destination=Zurich&keepOrder=true"
                flights:
                  - id: "e29b88fa-551d-4bb9-b7dd-99333c860efe"
                    airline:
                      code: "AC"
                      name: "Air Canada"
                    departureTime: "2025-04-15T00:55:00.000Z"
                    price: 1563
                  - id: "66d9a5fd-7d2d-4491-bbc6-bdf0a15fb7a5"
                    airline:
                      code: "SK"
                      name: "Scandinavian Airlines"
                    departureTime: "2025-04-15T17:15:00.000Z"
                    price: 1672
                  - id: "7ae43949-9928-4466-b6ef-48959f16a43a"
                    airline:
                      code: "AC"
                      name: "Air Canada"
                    departureTime: "2025-04-15T06:20:00.000Z"
                    price: 537
                  - id: "447fef24-df4b-4733-a5f9-1c511b0228d3"
                    airline:
                      code: "B6"
                      name: "JetBlue"
                    departureTime: "2025-04-16T07:05:00.000Z"
                    price: 1789


  /api/invoice:
    post:
      tags:
        - Booking
      summary: Generate Invoice
      description: >
        Generates a PDF invoice for a specified booking.  
        `bookingType` specifies which type of invoice to print:  
        - Use `"hotel"` for hotel bookings.  
        - Use `"flight"` for flight bookings.

      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                bookingId: 1
                bookingType: flight
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "PDF invoice generated successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceText:
                    type: string
              example:
                invoiceText: "Trip Invoice\n\nInvoice ID: 1\nBooking Date: Sat Mar 08 2025\nStatus: CONFIRMED\n\nFlight Booking:\nBooking Reference: 740FC2\n\n--- Flight 1 ---\nAirline: China Eastern Airlines (MU)\nOrigin: Shanghai Pudong International Airport, Shanghai\nDestination: Zurich Airport, Zurich\nDeparture: 2024-11-18, 7:40:00 a.m.\nArrival: 2024-11-18, 9:30:00 p.m.\nPrice: $1123\n\nThank you for booking with us!"




  /api/bookings/verifyFlight:
    get:
      tags:
        - Booking
      summary: Verify Flight
      description: Verifies a flight booking using last name and booking reference.
      security:
        - bearerAuth: []
      parameters:
        - name: lastName
          in: query
          schema:
            type: string
          example: Marez
        - name: bookingReference
          in: query
          schema:
            type: string
          example: A3D90E
      responses:
        '200':
          description: "Flight booking confirmed successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookingReference:
                    type: string
                  ticketNumber:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  passportNumber:
                    type: string
                  status:
                    type: string
                  agencyId:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  flights:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        flightNumber:
                          type: string
                        departureTime:
                          type: string
                          format: date-time
                        arrivalTime:
                          type: string
                          format: date-time
                        originId:
                          type: string
                        destinationId:
                          type: string
                        duration:
                          type: integer
                        price:
                          type: number
                        currency:
                          type: string
                        availableSeats:
                          type: integer
                        status:
                          type: string
                        airline:
                          type: object
                          properties:
                            code:
                              type: string
                            name:
                              type: string
                        origin:
                          type: object
                          properties:
                            code:
                              type: string
                            name:
                              type: string
                            city:
                              type: string
                            country:
                              type: string
                        destination:
                          type: object
                          properties:
                            code:
                              type: string
                            name:
                              type: string
                            city:
                              type: string
                            country:
                              type: string
              example:
                bookingReference: "A3D90E"
                ticketNumber: "134df9cc43"
                firstName: "Ali"
                lastName: "Marez"
                email: "test@test.com"
                passportNumber: "123239934"
                status: "CONFIRMED"
                agencyId: "3d99946b-9263-4287-850d-3bfccd78f8ca"
                createdAt: "2024-11-04T06:30:04.727Z"
                flights:
                  - id: "bd7ee4df-004d-4c95-abda-633d276a5842"
                    flightNumber: "AC8762"
                    departureTime: "2024-11-17T14:50:00.000Z"
                    arrivalTime: "2024-11-18T02:00:00.000Z"
                    originId: "370d2633-ba94-47f5-a735-513c0e332224"
                    destinationId: "2bcb7925-96aa-4de8-9ec1-3622e954c0b6"
                    duration: 670
                    price: 1744
                    currency: "CAD"
                    availableSeats: 0
                    status: "SCHEDULED"
                    airline:
                      code: "AC"
                      name: "Air Canada"
                    origin:
                      code: "YYZ"
                      name: "Toronto Pearson International Airport"
                      city: "Toronto"
                      country: "Canada"
                    destination:
                      code: "ZRH"
                      name: "Zurich Airport"
                      city: "Zurich"
                      country: "Switzerland"

  /api/notifications:
    get:
      tags:
        - Notifications
      summary: Get Notifications
      description: Fetches notifications for the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Notifications retrieved successfully."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    userId:
                      type: integer
                    message:
                      type: string
                    read:
                      type: boolean
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
              example:
                - id: 13
                  userId: 1
                  message: "Your booking at Example Hotel has been canceled by the hotel owner. Please contact the hotel for further assistance."
                  read: false
                  createdAt: "2025-03-08T23:08:54.736Z"
                  updatedAt: "2025-03-08T23:08:54.736Z"
                - id: 12
                  userId: 1
                  message: "Your flight reservation (Reference: 24C44C) is currently pending. Complete the payment process to secure your seat(s)."
                  read: false
                  createdAt: "2025-03-08T23:08:41.235Z"
                  updatedAt: "2025-03-08T23:08:41.235Z"
                - id: 11
                  userId: 1
                  message: "A new booking has been made at your hotel Example Hotel."
                  read: false
                  createdAt: "2025-03-08T23:08:37.993Z"
                  updatedAt: "2025-03-08T23:08:37.993Z"
                - id: 10
                  userId: 1
                  message: "Your reservation at Example Hotel (Room: Twin Room) has been successfully created. Check-in: 2025-04-15, Check-out: 2025-04-18."
                  read: false
                  createdAt: "2025-03-08T23:08:37.986Z"
                  updatedAt: "2025-03-08T23:08:37.986Z"
                - id: 9
                  userId: 1
                  message: "Congratulations! Your flight reservation has been confirmed. Please check your itinerary for full details."
                  read: false
                  createdAt: "2025-03-08T23:07:27.249Z"
                  updatedAt: "2025-03-08T23:07:27.249Z"
                - id: 8
                  userId: 1
                  message: "Congratulations! Your hotel reservation has been confirmed. Please check your itinerary for full details."
                  read: false
                  createdAt: "2025-03-08T23:07:22.127Z"
                  updatedAt: "2025-03-08T23:07:22.127Z"
                - id: 7
                  userId: 1
                  message: "Your flight reservation (Reference: B7DBE6) is currently pending. Complete the payment process to secure your seat(s)."
                  read: false
                  createdAt: "2025-03-08T23:07:16.731Z"
                  updatedAt: "2025-03-08T23:07:16.731Z"
                - id: 6
                  userId: 1
                  message: "A new booking has been made at your hotel Example Hotel."
                  read: false
                  createdAt: "2025-03-08T23:07:16.146Z"
                  updatedAt: "2025-03-08T23:07:16.146Z"
                - id: 5
                  userId: 1
                  message: "Your reservation at Example Hotel (Room: Twin Room) has been successfully created. Check-in: 2025-04-15, Check-out: 2025-04-18."
                  read: false
                  createdAt: "2025-03-08T23:07:16.140Z"
                  updatedAt: "2025-03-08T23:07:16.140Z"
                - id: 4
                  userId: 1
                  message: "Your selected bookings have been canceled successfully."
                  read: false
                  createdAt: "2025-03-08T23:03:54.225Z"
                  updatedAt: "2025-03-08T23:03:54.225Z"
                - id: 3
                  userId: 1
                  message: "Your flight reservation (Reference: C298E2) is currently pending. Complete the payment process to secure your seat(s)."
                  read: false
                  createdAt: "2025-03-08T23:02:59.249Z"
                  updatedAt: "2025-03-08T23:02:59.249Z"
                - id: 2
                  userId: 1
                  message: "A new booking has been made at your hotel Example Hotel."
                  read: false
                  createdAt: "2025-03-08T23:02:56.001Z"
                  updatedAt: "2025-03-08T23:02:56.001Z"
                - id: 1
                  userId: 1
                  message: "Your reservation at Example Hotel (Room: Twin Room) has been successfully created. Check-in: 2025-04-15, Check-out: 2025-04-18."
                  read: false
                  createdAt: "2025-03-08T23:02:55.995Z"
                  updatedAt: "2025-03-08T23:02:55.995Z"

    patch:
      tags:
        - Notifications
      summary: Mark Read
      description: Updates a notification (marks it as read) based on its ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                notificationId: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Notification updated successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    type: integer
                  message:
                    type: string
                  read:
                    type: boolean
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
              example:
                id: 1
                userId: 1
                message: "Your reservation at Example Hotel (Room: Twin Room) has been successfully created. Check-in: 2025-04-15, Check-out: 2025-04-18."
                read: true
                createdAt: "2025-03-08T23:02:55.995Z"
                updatedAt: "2025-03-08T23:10:55.087Z"

  /api/airports:
    get:
      tags:
        - Extra
      summary: Get Airports
      description: Returns a list of airports.
      responses:
        '200':
          description: "Airports list retrieved successfully."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    code:
                      type: string
                    name:
                      type: string
                    city:
                      type: string
                    country:
                      type: string
              example:
                - id: 1
                  code: "ATL"
                  name: "Hartsfield–Jackson Atlanta International Airport"
                  city: "Atlanta"
                  country: "United States"
                - id: 2
                  code: "PEK"
                  name: "Beijing Capital International Airport"
                  city: "Beijing"
                  country: "China"
                - id: 3
                  code: "LAX"
                  name: "Los Angeles International Airport"
                  city: "Los Angeles"
                  country: "United States"
                - id: 4
                  code: "DXB"
                  name: "Dubai International Airport"
                  city: "Dubai"
                  country: "United Arab Emirates"
                - id: 5
                  code: "HND"
                  name: "Tokyo Haneda Airport"
                  city: "Tokyo"
                  country: "Japan"
                - id: 6
                  code: "ORD"
                  name: "O'Hare International Airport"
                  city: "Chicago"
                  country: "United States"
                - id: 7
                  code: "LHR"
                  name: "Heathrow Airport"
                  city: "London"
                  country: "United Kingdom"
                - id: 8
                  code: "IAH"
                  name: "George Bush Intercontinental Airport"
                  city: "Houston"
                  country: "United States"
                - id: 9
                  code: "DFW"
                  name: "Dallas/Fort Worth International Airport"
                  city: "Dallas"
                  country: "United States"
                - id: 10
                  code: "CAN"
                  name: "Guangzhou Baiyun International Airport"
                  city: "Guangzhou"
                  country: "China"
                # (Additional items omitted for brevity)
  /api/cities:
    get:
      tags:
        - Extra
      summary: Get Cities
      description: Returns a list of cities.
      responses:
        '200':
          description: "Cities list retrieved successfully."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    city:
                      type: string
                    country:
                      type: string
              example:
                - id: 1
                  city: "Atlanta"
                  country: "United States"
                - id: 2
                  city: "Beijing"
                  country: "China"
                - id: 3
                  city: "Los Angeles"
                  country: "United States"
                - id: 4
                  city: "Dubai"
                  country: "United Arab Emirates"
                - id: 5
                  city: "Tokyo"
                  country: "Japan"
                - id: 6
                  city: "Chicago"
                  country: "United States"
                - id: 7
                  city: "London"
                  country: "United Kingdom"
                - id: 8
                  city: "Houston"
                  country: "United States"
                - id: 9
                  city: "Dallas"
                  country: "United States"
                - id: 10
                  city: "Guangzhou"
                  country: "China"
                # (Additional items omitted for brevity)
